{"ast":null,"code":"var _jsxFileName = \"/Users/evgeny/Desktop/TZ_Chat\\xA0\\u2014 \\u043A\\u043E\\u043F\\u0438\\u044F/client/src/components/Video/Video.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport { Link } from 'react-router-dom';\nimport './Video.css';\nlet socket;\n\nconst Video = function ({\n  name,\n  room,\n  location\n}) {\n  const serverPoint = 'localhost:5000';\n  useEffect(() => {\n    // Деструктурируем объект и присваиваем из строки url name и room\n    const _queryString$parse = queryString.parse(location.search),\n          name = _queryString$parse.name,\n          room = _queryString$parse.room; // Присваиваем перменной socket значение io, с параметром localhost:5000\n\n\n    socket = io(serverPoint); // Используем метод emit, и передаем в функцию параметры 'join',name,room, а также колбэк функцию error,и указатель на localhost5000\n\n    socket.emit('join-room', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"outside__video--container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"video__grid\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, room), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Link, {\n    className: \"video__btn\",\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0431\\u0435\\u0441\\u0435\\u0434\\u044B\")));\n};\n\nexport default Video;","map":{"version":3,"sources":["/Users/evgeny/Desktop/TZ_Chat — копия/client/src/components/Video/Video.js"],"names":["React","useState","useEffect","queryString","io","Link","socket","Video","name","room","location","serverPoint","parse","search","emit","error","alert"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAAOC,IAAP,QAAkB,kBAAlB;AAEA,OAAO,aAAP;AACC,IAAIC,MAAJ;;AAED,MAAMC,KAAK,GAAG,UAAS;AAACC,EAAAA,IAAD;AAAMC,EAAAA,IAAN;AAAWC,EAAAA;AAAX,CAAT,EAA8B;AAExC,QAAMC,WAAW,GAAG,gBAApB;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ;AADY,+BAEWC,WAAW,CAACS,KAAZ,CAAkBF,QAAQ,CAACG,MAA3B,CAFX;AAAA,UAEJL,IAFI,sBAEJA,IAFI;AAAA,UAEEC,IAFF,sBAEEA,IAFF,EAIZ;;;AACAH,IAAAA,MAAM,GAAGF,EAAE,CAACO,WAAD,CAAX,CALY,CAMZ;;AACAL,IAAAA,MAAM,CAACQ,IAAP,CAAY,WAAZ,EAAyB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAzB,EAA0CM,KAAD,IAAW;AAClD,UAAGA,KAAH,EAAU;AACRC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAKD,GAZM,EAYJ,EAZI,CAAT;AAcA,SACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,IAAL,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,YAAhB;AAA6B,IAAA,EAAE,EAAC,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wFADA,CANJ,CADJ;AAaH,CA/BD;;AAiCA,eAAeF,KAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\nimport{Link} from 'react-router-dom'\n\nimport './Video.css'\n let socket;\n\nconst Video = function({name,room,location}){\n   \n    const serverPoint = 'localhost:5000'\n    \n    useEffect(() => {\n        // Деструктурируем объект и присваиваем из строки url name и room\n        const { name, room } = queryString.parse(location.search);\n    \n        // Присваиваем перменной socket значение io, с параметром localhost:5000\n        socket = io(serverPoint);\n        // Используем метод emit, и передаем в функцию параметры 'join',name,room, а также колбэк функцию error,и указатель на localhost5000\n        socket.emit('join-room', { name, room }, (error) => {\n          if(error) {\n            alert(error);\n          } \n        });\n      }, []);\n      \n    return (\n        <div className=\"outside__video--container\">\n            <div className=\"video__grid\">\n                \n            </div>\n            <h1>{name}</h1>\n            <p>{room}</p>\n            <div>\n            <Link className=\"video__btn\" to=\"/\">Выйти из беседы</Link>\n            </div>\n        </div>\n       \n    )\n}\n\nexport default Video;"]},"metadata":{},"sourceType":"module"}